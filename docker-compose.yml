name: app

services:
  frontend:
    build:
      context: .
      dockerfile: frontend/dev.Dockerfile
    volumes:
      - ./frontend:/frontend
    depends_on:
      backend:
        condition: service_started
    env_file:
      - path: ./dev.env
        required: true
    environment:
    - API_URL=${API_HOST}:${API_PORT}
    networks:
      - dev-network
    ports:
      - "3000:3000"

  backend:
    build: 
      context: .
      dockerfile: backend/dev.Dockerfile
    volumes:
      - ./backend:/backend
    depends_on:
      database:
        condition: service_healthy
    env_file:
      - path: ./dev.env
        required: true
    environment:
      - MONGO_URL=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@${MONGO_HOST}:${MONGO_PORT}/${MONGO_INITDB_ROOT_DATABASE}
    networks:
      - dev-network
    ports:
      - "5000:5000"

  database:
    build:
      context: .
      dockerfile: database/dev.Dockerfile
    volumes:
      - mongodb-data:/data/db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - dev-network
    ports:
      - "27017:27017"

networks:
  dev-network:
    driver: bridge

volumes:
  mongodb-data:
    driver: local